
@using QLNS.Model.Entities;
@using Newtonsoft.Json;
@using QLNS.Service.Common;
@using QLNS.Web.Areas.TdCauHinhSangLocUngVienArea.Models;
@model IndexVM
@{
    var lstData = Html.Raw(JsonConvert.SerializeObject(Model.Data));
}

<style>
    .action-icon {
        margin-right: 5px;
    }

    .toUpper {
        text-transform: uppercase;
    }

    .mini-title {
        font-weight: bold
    }

    #sortableConfig > div {
        float: left;
    }

    #sortableConfig {
        white-space: nowrap;
        position: relative;
        overflow-x: scroll;
        overflow-y: hidden;
        -webkit-overflow-scrolling: touch;
    }

        #sortableConfig > .draggable {
            width: 20em;
            /*background-color: #eee;*/
            float: none;
            min-height: 90%;
            margin: 0 0.25%;
            display: inline-flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding-bottom: 2%;
            padding-top: 2%;
        }

    .sortableContent {
        margin: 3% 10%;
        word-break: break-all;
        white-space: normal;
    }

    .sortableButton {
        margin-top: 3%;
        margin-bottom: 0px;
    }
</style>

<div class="row">
    <div id="sortableConfig"></div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    var lstData = eval(@lstData),
        dotId = +'@Model.DotTuyenDungId',
        isChanged = false;
    // row generator
    function genRow(lstData) {
        let result = "";
        // render items
        for (let data of lstData) {
            if (data.Type === "Interview") {
                result += `<div class="draggable ui-state-default ui-sortable-handle" data-id="${data.Id}">
                    <a href="#" class="btn btn-app btn-primary">
                        <i class="ace-icon fa fa-comments-o bigger-230"></i>
                        Phỏng vấn
                    </a>
<p class="sortableButton">
                <a style='margin-right:5px;' class='btn btn-primary btn-sm' href='javascript:void(0)' onclick='EditAction(\"/TdCauHinhSangLocUngVienArea/TdCauHinhSangLocUngVien/Edit/${data.Id}\")' title='Chỉnh sửa'><i class='glyphicon glyphicon-edit action-icon'></i>Chỉnh sửa</a>
                <a class='btn btn-danger btn-sm' href='javascript:void(0)' onclick='_onDelete(\"/TdCauHinhSangLocUngVienArea/TdCauHinhSangLocUngVien/Delete/${data.Id}\")' title = 'Xóa'><i class=' glyphicon glyphicon-remove action-icon'></i>Xoá</a>
            </p>
                    <p class="sortableContent">
<span class="mini-title">Tiêu đề:</span> ${data.Title}
<br />
<span class="mini-title">Ngày phỏng vấn:</span> ${ToDate(data.InterviewDate)}
<br />
                    <span class="mini-title">Người phỏng vấn:</span> ${data.InterviewerName}
<br />
                    <span class="mini-title">Ghi chú:</span> ${data.Note}
</p>
                </div>`;
            }
            else {
                result += `<div class="draggable ui-state-default ui-sortable-handle" data-id="${data.Id}">
                    <a href="#" class="btn btn-app btn-primary">
                        <i class="ace-icon fa fa-file-text-o bigger-230"></i>
                        Bài test
                    </a>
<p class="sortableButton">
                <a style='margin-right:5px;' class='btn btn-primary btn-sm' href='javascript:void(0)' onclick='EditAction(\"/TdCauHinhSangLocUngVienArea/TdCauHinhSangLocUngVien/Edit/${data.Id}\")' title='Chỉnh sửa'><i class='glyphicon glyphicon-edit action-icon'></i>Chỉnh sửa</a>
                <a class='btn btn-danger btn-sm' href='javascript:void(0)' onclick='_onDelete(\"/TdCauHinhSangLocUngVienArea/TdCauHinhSangLocUngVien/Delete/${data.Id}\")' title = 'Xóa'><i class=' glyphicon glyphicon-remove action-icon'></i>Xoá</a>
            </p>
                    <p class="sortableContent">
<span class="mini-title">Tiêu đề:</span> ${data.Title}
<br/>
                    <span class="mini-title">Biểu mẫu:</span> <a href="/Uploads/${data.FileDirectory}" download><i class="fa fa-download"></i> ${data.FileName}</a>
<br/>
                    <span class="mini-title">Điều kiện qua:</span> ${data.TestApprovedLimit}
<br/>
                    <span class="mini-title">Ghi chú:</span> ${data.Note}
</p>
                </div>`;
            }
        }
        // render default add-new-button
        result += `<div class="draggable ui-state-default ui-sortable-handle ui-state-disabled">
            <a href="javascript:void(0)" onclick="CreateAction('/TdCauHinhSangLocUngVienArea/TdCauHinhSangLocUngVien/Create/@Model.DotTuyenDungId')" class="btn btn-app btn-primary">
                <i class="ace-icon fa fa-plus-square-o bigger-230"></i>
                <span style="font-size:0.9em">Thêm mới</span>
            </a>
            <a href="javascript:void(0)" style="margin-top:3%;" onclick="saveChangesOnRow()" class="btn btn-app btn-primary">
                <i class="ace-icon fa fa-save bigger-230"></i>
                <span style="font-size:0.9em">Lưu thay đổi</span>
            </a>
        </div>`;
        return result;
    }
    // changes saving handler
    function saveChangesOnRow() {
        let jsonString = JSON.stringify(
            $("#sortableConfig").sortable('serialize', {
                attribute: 'data-id',//this will look up this attribute
                key: 'id',//this manually sets the key
                expression: /(.+)/ //expression is a RegExp allowing to determine how to split the data in key-value. In your case it's just the value
            })
                .match(/\d+/g)
        );
        if (isChanged) {
            AjaxCall("/TdCauHinhSangLocUngVienArea/TdCauHinhSangLocUngVien/SavePriorityChanges", "POST", { jsonStr: jsonString }, function (res) {
                if (res.Status) {
                    reloadRow();
                    NotiSuccess("Thành công", res.Message);
                }
                else {
                    NotiError("Lỗi xử lý", res.Message);
                }
            });
        }
        else {
            NotiError("Cảnh báo", "Không có thay đổi");
        }
    }
    // reloader
    function reloadRow() {
        AjaxCall("/TdCauHinhSangLocUngVienArea/TdCauHinhSangLocUngVien/ReloadRow/" + dotId, 'get', null, function (rs) {
            if (rs.Status) {
                $("#sortableConfig").empty();
                $("#sortableConfig").html(genRow(rs.Param));
            }
            else {
                NotiError("Lỗi xử lý", rs.Message);
            }
        });
    }
    // override
    function pageFunction() {
        $("#sortableConfig").prepend(genRow(lstData));
    }
    function _AfterSussessActionAjaxform() {
        reloadRow();
    }
    function _AjaxFormSuccess(rs) {
        if (rs.Status) {

            $("#MasterModal").modal("hide");
            $("#MasterModal").empty();
            NotiSuccess("Thành công", "Cập nhật dữ liệu thành công");
            _AfterSussessActionAjaxform();
        } else {
            NotiError("Lỗi xử lý", rs.Message);
        }
    }
    function _AjaxFormError() {
        NotiError("Có lỗi xảy ra", "Vui lòng kiểm tra lại thông tin");
    }
    function _onDelete(url, mesage) {
        if (mesage == null || mesage == '') {
            mesage = "Bạn xác nhận thực hiện thao tác này ?";
        }
        bootbox.confirm(mesage, function (result) {
            if (result) {
                AjaxCall(url, 'delete', null, function (result) {
                    if (result.Status) {
                        NotiSuccess("Thành công", result.Message);
                        _AfterSussessActionAjaxform();
                    } else {
                        NotiError("Lỗi xử lý", result.Message);
                    }
                })
            }
        });
    }
    // activate sortable
    $(document).ready(function () {
        $("#sortableConfig").sortable({
            revert: true,
            items: "div:not(.ui-state-disabled)", // everything except add new button
            change: function (event, ui) {
                isChanged = true;
            }
        });
        pageFunction();
    })
</script>